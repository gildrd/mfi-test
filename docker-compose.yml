version: '3.4'
services:
  web:
    container_name: mfi_php
    build: ./
    links:
      - db:postgres
    ports:
      - 80:80
    volumes:
      - ./:/app/
      - ./.docker/xdebug/:/tmp/debug
      - ./.docker/private/:/private
    environment:
      - PHP_IDE_CONFIG=serverName=mfi.test
      - PHP_DEBUGGER=xdebug
      - XDEBUG_MODE=debug
      - XDEBUG_CLIENT_HOST=host.docker.internal
      - XDEBUG_CLIENT_PORT=9000
#      - XDEBUG_REMOTE_HOST=host.docker.internal
#      - XDEBUG_REMOTE_PORT=9000
#      - XDEBUG_REMOTE_AUTOSTART=1
#      - XDEBUG_REMOTE_CONNECT_BACK=0
      - XDEBUG_PROFILER_OUTPUT_DIR="/tmp/debug"
      - PHP_MAX_EXECUTION_TIME=1200
      - PHP_POST_MAX_SIZE=1G
      - PHP_UPLOAD_MAX_FILESIZE=1G
      - PHP_DISPLAY_ERRORS=1
      - WEB_ALIAS_DOMAIN=mfi.test
      - WEB_DOCUMENT_ROOT=/app/public
      - PHP_DISMOD=ioncube

  db:
    container_name: pfi_postgres
    image: postgis/postgis
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready -U $$POSTGRES_USER -h $$(hostname -i)"]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - APP_DB_USER=db
      - APP_DB_PASS=db
      - APP_DB_NAME=mfi
      - POSTGRES_DB=mfi
      - POSTGRES_USER=db
      - POSTGRES_PASSWORD=db
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  phpmyadmin:
    container_name: mfi_phpmyadmin
    image: phpmyadmin/phpmyadmin
    links:
      - db:postgres
    ports:
      - 8080:80
    environment:
      - POSTGRES_USER=db
      - POSTGRES_PASSWORD=db
      - POSTGRES_ROOT_PASSWORD=root
      - UPLOAD_LIMIT=500M